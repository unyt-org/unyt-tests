'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var os = require('os');
var crypto = require('crypto');
var path = require('path');
var fsUtil = require('ginlibs-file-util');
var ginlibsTypeCheck = require('ginlibs-type-check');
var stringify = require('json-stringify-safe');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var os__default = /*#__PURE__*/_interopDefaultLegacy(os);
var crypto__default = /*#__PURE__*/_interopDefaultLegacy(crypto);
var fsUtil__default = /*#__PURE__*/_interopDefaultLegacy(fsUtil);
var stringify__default = /*#__PURE__*/_interopDefaultLegacy(stringify);

const CACHE_FILE_NAME = '.ginlibs.cache';
const HASH = crypto__default['default'].createHash('md5').update('ginlibs_cache_key').digest('base64');
class Cache {
  constructor(dir) {
    this.fileName = `${HASH}${CACHE_FILE_NAME}.txt`;
    this.dir = dir;
  }

  write(...content) {
    const cacheFilePath = path.join(this.dir || os__default['default'].tmpdir(), this.fileName);
    console.log(cacheFilePath);
    const newCont = content.map(it => {
      if (ginlibsTypeCheck.isObject(it) || ginlibsTypeCheck.isArray(it)) {
        return stringify__default['default'](it, undefined, 2);
      }

      return `${it}`;
    }).join(' ');
    const oldContent = fsUtil__default['default'].read(cacheFilePath);
    const newContent = `${oldContent}\n${newCont}`;

    if (newContent.length > Math.pow(1024, 3)) {
      console.log(`cache file size over ${Math.pow(1024, 3)}`);
    }

    fsUtil__default['default'].write(cacheFilePath, newContent);
  }

}
var index = new Cache();

exports.Cache = Cache;
exports.default = index;
